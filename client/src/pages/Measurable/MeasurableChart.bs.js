// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Utils$ReactTemplate = require("../../utils/Utils.bs.js");
var Victory$ReactTemplate = require("../../utils/Victory.bs.js");

var component = ReasonReact.statelessComponent("MeasurableChart");

function toUnix(x) {
  return x.createdAt.unix();
}

function make(measurements, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var sorted = Utils$ReactTemplate.catOptionals(measurements).sort((function (a, b) {
                      var match = b.createdAt.unix() > a.createdAt.unix();
                      if (match) {
                        return -1;
                      } else {
                        return 1;
                      }
                    }));
              var yMax = $$Array.fold_left((function (a, b) {
                      var match = a > b;
                      if (match) {
                        return a;
                      } else {
                        return b;
                      }
                    }), Number.MIN_VALUE, $$Array.map((function (e) {
                          return Caml_format.caml_float_of_string(e.percentile75);
                        }), sorted));
              var yMin = $$Array.fold_left((function (a, b) {
                      var match = a < b;
                      if (match) {
                        return a;
                      } else {
                        return b;
                      }
                    }), Number.MAX_VALUE, $$Array.map((function (e) {
                          return Caml_format.caml_float_of_string(e.percentile25);
                        }), sorted));
              var percentiles = $$Array.map((function (e) {
                      return {
                              x: new Date(e.createdAt.format("MMM DD, YYYY HH:MM:ss:SSS")),
                              y: Caml_format.caml_float_of_string(e.percentile25),
                              y0: Caml_format.caml_float_of_string(e.percentile75)
                            };
                    }), sorted);
              var all = $$Array.map((function (e) {
                      return {
                              x: new Date(e.createdAt.format("MMM DD, YYYY HH:MM:ss:SSS")),
                              y1: Caml_format.caml_float_of_string(e.percentile25),
                              y2: Caml_format.caml_float_of_string(e.percentile50),
                              y3: Caml_format.caml_float_of_string(e.percentile75)
                            };
                    }), sorted);
              var medians = $$Array.map((function (e) {
                      return {
                              x: new Date(e.createdAt.format("MMM DD, YYYY HH:MM:ss:SSS")),
                              y: Caml_format.caml_float_of_string(e.percentile50)
                            };
                    }), sorted);
              return ReasonReact.element(/* None */0, /* None */0, Victory$ReactTemplate.VictoryChart[/* make */0](/* None */0, /* None */0, /* Some */[{
                                x: "time"
                              }], /* Some */[{
                                y: yMax
                              }], /* Some */[{
                                y: yMin
                              }], /* array */[
                              ReasonReact.element(/* None */0, /* None */0, Victory$ReactTemplate.VictoryArea[/* make */0](/* None */0, /* Some */[percentiles], /* None */0, /* Some */[{
                                          data: {
                                            fill: "f6f6f6"
                                          }
                                        }], /* array */[])),
                              ReasonReact.element(/* None */0, /* None */0, Victory$ReactTemplate.VictoryLine[/* make */0](/* Some */[medians], /* Some */[{
                                          data: {
                                            stroke: "#ddd",
                                            strokeWidth: "1",
                                            strokeDasharray: "4 4 4 4"
                                          }
                                        }], /* array */[])),
                              $$Array.mapi((function (i, e) {
                                      return ReasonReact.element(/* Some */[String(i)], /* None */0, Victory$ReactTemplate.VictoryMeasurement[/* make */0](/* Some */[e], /* None */0, /* array */[]));
                                    }), all)
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.toUnix = toUnix;
exports.make = make;
/* component Not a pure module */
