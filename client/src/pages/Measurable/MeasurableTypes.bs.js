// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function parseTrio(json) {
  return /* record */[
          /* p25 */Json_decode.field("p25", Json_decode.$$float, json),
          /* p50 */Json_decode.field("p50", Json_decode.$$float, json),
          /* p75 */Json_decode.field("p75", Json_decode.$$float, json)
        ];
}

function parseValue(json) {
  return /* record */[
          /* trio */Json_decode.optional((function (param) {
                  return Json_decode.field("trio", parseTrio, param);
                }), json),
          /* pointEstimate */Json_decode.optional((function (param) {
                  return Json_decode.field("pointEstimate", Json_decode.$$float, param);
                }), json)
        ];
}

function encodeTrio(trio) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "p25",
                trio[/* p25 */0]
              ],
              /* :: */[
                /* tuple */[
                  "p50",
                  trio[/* p50 */1]
                ],
                /* :: */[
                  /* tuple */[
                    "p75",
                    trio[/* p75 */2]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function encodeValue(value) {
  var match = value[/* trio */0];
  if (match !== undefined) {
    return Json_encode.object_(/* :: */[
                /* tuple */[
                  "trio",
                  encodeTrio(match)
                ],
                /* [] */0
              ]);
  } else {
    return "";
  }
}

exports.parseTrio = parseTrio;
exports.parseValue = parseValue;
exports.encodeTrio = encodeTrio;
exports.encodeValue = encodeValue;
/* Json_encode Not a pure module */
