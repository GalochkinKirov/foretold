// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Option$Rationale = require("rationale/src/Option.js");
var Utils$ReactTemplate = require("../../utils/Utils.bs.js");
var HandsOnTable$ReactTemplate = require("../../utils/HandsOnTable.bs.js");

var component = ReasonReact.statelessComponent("MeasurableTable");

function toUnix(x) {
  return x.createdAt.unix();
}

function make(measurements, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var data = $$Array.map((function (e) {
                      var link = function (agent) {
                        var match = Curry._2(Option$Rationale.$less$$great, agent, (function (x) {
                                return x.id;
                              }));
                        var match$1 = Curry._2(Option$Rationale.$great$great$eq, Curry._2(Option$Rationale.$great$great$eq, agent, (function (x) {
                                    return x.bot;
                                  })), (function (x) {
                                return x.name;
                              }));
                        var match$2 = Curry._2(Option$Rationale.$less$$great, Curry._2(Option$Rationale.$great$great$eq, agent, (function (x) {
                                    return x.user;
                                  })), (function (x) {
                                return x.name;
                              }));
                        if (match) {
                          if (match$1) {
                            return "<a href=\"/agents/" + (String(match) + ("\">" + (String(match$1[0]) + "</a>")));
                          } else if (match$2) {
                            return "<a href=\"/agents/" + (String(match) + ("\">" + (String(match$2[0]) + "</a>")));
                          } else {
                            return "";
                          }
                        } else {
                          return "";
                        }
                      };
                      return Js_dict.fromList(/* :: */[
                                  /* tuple */[
                                    "createdAt",
                                    e.createdAt.format("YYYY-MM-DD-SS")
                                  ],
                                  /* :: */[
                                    /* tuple */[
                                      "percentile25",
                                      e.percentile25
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        "percentile50",
                                        e.percentile50
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          "percentile75",
                                          e.percentile75
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            "userLink",
                                            link(e.agent)
                                          ],
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]);
                    }), Utils$ReactTemplate.catOptionals(measurements).sort((function (a, b) {
                          var match = b.createdAt.unix() > a.createdAt.unix();
                          if (match) {
                            return -1;
                          } else {
                            return 1;
                          }
                        })));
              var columns = /* array */[
                HandsOnTable$ReactTemplate.makeColumn("createdAt", /* None */0, /* None */0, /* () */0),
                HandsOnTable$ReactTemplate.makeColumn("percentile25", /* None */0, /* None */0, /* () */0),
                HandsOnTable$ReactTemplate.makeColumn("percentile50", /* None */0, /* None */0, /* () */0),
                HandsOnTable$ReactTemplate.makeColumn("percentile75", /* None */0, /* None */0, /* () */0),
                HandsOnTable$ReactTemplate.makeColumn("userLink", /* Some */["html"], /* None */0, /* () */0)
              ];
              var colHeaders = /* array */[
                "Created at",
                "25th",
                "50th",
                "75th",
                "User"
              ];
              return ReasonReact.element(/* None */0, /* None */0, HandsOnTable$ReactTemplate.make(data, columns, colHeaders, /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.toUnix = toUnix;
exports.make = make;
/* component Not a pure module */
