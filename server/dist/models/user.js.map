{"version":3,"sources":["../../src/models/user.js"],"names":["Sequelize","require","module","exports","sequelize","DataTypes","Model","define","id","type","UUID","primaryKey","defaultValue","UUIDV4","allowNull","name","STRING","auth0Id","hooks","beforeCreate","event","options","agent","models","Agent","create","agentId","dataValues","associate","belongsTo","foreignKey","Bots","hasMany","Bot"],"mappings":"AAAA;;AACA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AAEAC,OAAOC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,MAAIC,QAAQF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AACnCC,QAAI;AACFC,YAAMJ,UAAUK,IAAV,EADJ;AAEFC,kBAAY,IAFV;AAGFC,oBAAcZ,UAAUa,MAHtB;AAIFC,iBAAW;AAJT,KAD+B;AAOnCC,UAAM;AACJN,YAAMJ,UAAUW,MADZ;AAEJF,iBAAW;AAFP,KAP6B;AAWnCG,aAAS;AACPR,YAAMJ,UAAUW,MADT;AAEPF,iBAAW;AAFJ;AAX0B,GAAzB,EAgBZ;AACEI,WAAO;AACLC,oBAAc,OAAOC,KAAP,EAAcC,OAAd,KAA0B;AACtC,YAAIC,QAAQ,MAAMlB,UAAUmB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA8B;AAC9ChB,gBAAM;AADwC,SAA9B,CAAlB;AAGAW,cAAMM,OAAN,GAAgBJ,MAAMK,UAAN,CAAiBnB,EAAjC;AACD;AANI;AADT,GAhBY,CAAZ;AA2BAF,QAAMsB,SAAN,GAAkB,UAAUL,MAAV,EAAkB;AAClCjB,UAAMkB,KAAN,GAAclB,MAAMuB,SAAN,CAAgBN,OAAOC,KAAvB,EAA8B,EAACM,YAAY,SAAb,EAA9B,CAAd;AACAxB,UAAMyB,IAAN,GAAazB,MAAM0B,OAAN,CAAcT,OAAOU,GAArB,EAA0B,EAACH,YAAY,QAAb,EAA1B,CAAb;AACD,GAHD;AAIA,SAAOxB,KAAP;AACD,CAjCD","file":"user.js","sourcesContent":["'use strict';\nconst Sequelize = require('sequelize')\n\nmodule.exports = (sequelize, DataTypes) => {\n  var Model = sequelize.define('User', {\n    id: {\n      type: DataTypes.UUID(),\n      primaryKey: true,\n      defaultValue: Sequelize.UUIDV4,\n      allowNull: false,\n    },\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false,\n    },\n    auth0Id: {\n      type: DataTypes.STRING,\n      allowNull: true,\n    }\n  },\n  {\n    hooks: {\n      beforeCreate: async (event, options) => {\n        let agent = await sequelize.models.Agent.create({\n          type: \"USER\",\n        });\n        event.agentId = agent.dataValues.id\n      }\n    }\n  }\n  );\n  Model.associate = function (models) {\n    Model.Agent = Model.belongsTo(models.Agent, {foreignKey: 'agentId'})\n    Model.Bots = Model.hasMany(models.Bot, {foreignKey: 'userId'})\n  }\n  return Model;\n};\n"]}