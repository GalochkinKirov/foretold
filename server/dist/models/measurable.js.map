{"version":3,"sources":["../../src/models/measurable.js"],"names":["Sequelize","require","module","exports","sequelize","DataTypes","Model","define","id","type","UUID","primaryKey","defaultValue","UUIDV4","allowNull","name","STRING","description","TEXT","valueType","ENUM","isLocked","BOOLEAN","lockedAt","DATE","expectedResolutionDate","measurementCount","VIRTUAL","INTEGER","get","items","getMeasurements","length","measurerCount","uniq","map","i","agentId","associate","models","Measurements","hasMany","Measurement","foreignKey","as","Creator","belongsTo","Agent"],"mappings":"AAAA;;AAEA;;;;;;AADA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;;;AAGAC,OAAOC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,MAAIC,QAAQF,UAAUG,MAAV,CAAiB,YAAjB,EAA+B;AACzCC,QAAI;AACFC,YAAMJ,UAAUK,IAAV,EADJ;AAEFC,kBAAY,IAFV;AAGFC,oBAAcZ,UAAUa,MAHtB;AAIFC,iBAAW;AAJT,KADqC;AAOzCC,UAAM;AACJN,YAAMJ,UAAUW,MADZ;AAEJF,iBAAW;AAFP,KAPmC;AAWzCG,iBAAa;AACXR,YAAMJ,UAAUa,IADL;AAEXJ,iBAAW;AAFA,KAX4B;AAezCK,eAAW;AACTV,YAAMJ,UAAUe,IAAV,CAAe,CAAC,OAAD,EAAU,MAAV,EAAkB,YAAlB,CAAf,CADG;AAETN,iBAAW;AAFF,KAf8B;AAmBzCO,cAAU;AACRP,iBAAW,KADH;AAERF,oBAAc,KAFN;AAGRH,YAAMJ,UAAUiB;AAHR,KAnB+B;AAwBzCC,cAAU;AACRT,iBAAW,IADH;AAERL,YAAMJ,UAAUmB;AAFR,KAxB+B;AA4BzCC,4BAAwB;AACtBX,iBAAW,IADW;AAEtBL,YAAMJ,UAAUmB;AAFM,KA5BiB;AAgCzCE,sBAAkB;AAChBZ,iBAAW,IADK;AAEhBL,YAAMT,UAAU2B,OAAV,CAAkBtB,UAAUuB,OAA5B,CAFU;AAGhBC,WAAK,kBAAiB;AACpB,cAAMC,QAAQ,MAAM,KAAKC,eAAL,EAApB;AACA,eAAOD,MAAME,MAAb;AACD;AANe,KAhCuB;AAwCzCC,mBAAe;AACbnB,iBAAW,IADE;AAEbL,YAAMT,UAAU2B,OAAV,CAAkBtB,UAAUuB,OAA5B,CAFO;AAGbC,WAAK,kBAAiB;AACpB,cAAMC,QAAQ,MAAM,KAAKC,eAAL,EAApB;AACA,eAAO,iBAAEG,IAAF,CAAOJ,MAAMK,GAAN,CAAUC,KAAKA,EAAEC,OAAjB,CAAP,EAAkCL,MAAzC;AACD;AANY;AAxC0B,GAA/B,CAAZ;AAiDA1B,QAAMgC,SAAN,GAAkB,UAAUC,MAAV,EAAkB;AAClCjC,UAAMkC,YAAN,GAAqBlC,MAAMmC,OAAN,CAAcF,OAAOG,WAArB,EAAkC;AACrDC,kBAAY,cADyC;AAErDC,UAAI;AAFiD,KAAlC,CAArB;AAIAtC,UAAMuC,OAAN,GAAgBvC,MAAMwC,SAAN,CAAgBP,OAAOQ,KAAvB,EAA8B;AAC5CJ,kBAAY,WADgC;AAE5CC,UAAI;AAFwC,KAA9B,CAAhB;AAID,GATD;AAUA,SAAOtC,KAAP;AACD,CA7DD","file":"measurable.js","sourcesContent":["'use strict';\nconst Sequelize = require('sequelize')\nimport _ from \"lodash\";\n\nmodule.exports = (sequelize, DataTypes) => {\n  var Model = sequelize.define('Measurable', {\n    id: {\n      type: DataTypes.UUID(),\n      primaryKey: true,\n      defaultValue: Sequelize.UUIDV4,\n      allowNull: false,\n    },\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false,\n    },\n    description: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    valueType: {\n      type: DataTypes.ENUM([\"FLOAT\", \"DATE\", \"PERCENTAGE\"]),\n      allowNull: false,\n    },\n    isLocked: {\n      allowNull: false,\n      defaultValue: false,\n      type: DataTypes.BOOLEAN\n    },\n    lockedAt: {\n      allowNull: true,\n      type: DataTypes.DATE\n    },\n    expectedResolutionDate: {\n      allowNull: true,\n      type: DataTypes.DATE\n    },\n    measurementCount: {\n      allowNull: true,\n      type: Sequelize.VIRTUAL(DataTypes.INTEGER),\n      get: async function() {\n        const items = await this.getMeasurements()\n        return items.length\n      }\n    },\n    measurerCount: {\n      allowNull: true,\n      type: Sequelize.VIRTUAL(DataTypes.INTEGER),\n      get: async function() {\n        const items = await this.getMeasurements()\n        return _.uniq(items.map(i => i.agentId)).length\n      }\n    },\n  });\n  Model.associate = function (models) {\n    Model.Measurements = Model.hasMany(models.Measurement, {\n      foreignKey: 'measurableId',\n      as: 'Measurements'\n    })\n    Model.Creator = Model.belongsTo(models.Agent, {\n      foreignKey: 'creatorId',\n      as: 'creator'\n    })\n  }\n  return Model;\n};\n"]}